plugins {
    id 'java'
    id 'war'
}

group 'ru.task'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url "https://mavensync.zkoss.org/maven2"
    }
}

ext {
    junitVersion = '5.9.1'
}

sourceCompatibility = '11'
targetCompatibility = '11'

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

dependencies {
    compileOnly('jakarta.platform:jakarta.jakartaee-api:9.1.0')
    compileOnly('jakarta.mvc:jakarta.mvc-api:2.0.0')
    implementation('org.hibernate:hibernate-core:6.0.2.Final')
    implementation('org.glassfish.jaxb:jaxb-runtime:3.0.2')
    implementation('org.hibernate.validator:hibernate-validator:7.0.4.Final')
    implementation('org.jboss.weld.se:weld-se-core:4.0.3.Final')
    implementation("org.zkoss.zk:zk:9.6.0.2-jakarta")
    implementation('org.zkoss.zk:zkbind:9.6.0.2-jakarta')
    implementation("org.zkoss.zk:zkplus:9.6.0.2-jakarta")
    implementation("org.zkoss.zk:zul:9.6.0.2-jakarta")
    implementation('org.zkoss.zk:zhtml:9.6.0.2-jakarta')
    implementation('org.zkoss.zk:zkwebfragment:9.6.0.2-jakarta')
    implementation('commons-io:commons-io:2.11.0')
    implementation('commons-fileupload:commons-fileupload:1.5')
    implementation("org.mapstruct:mapstruct:1.5.3.Final")
    annotationProcessor('org.mapstruct:mapstruct-processor:1.5.3.Final')
    testAnnotationProcessor('org.mapstruct:mapstruct-processor:1.5.3.Final')
    compileOnly('org.projectlombok:lombok:1.18.24')
    annotationProcessor('org.projectlombok:lombok:1.18.4')
    implementation("org.liquibase:liquibase-core:4.20.0")

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

sourceSets.configureEach { sourceSet ->
    tasks.named(sourceSet.compileJavaTaskName).configure {
        options.annotationProcessorGeneratedSourcesDirectory = file("$buildDir/generated/sources/annotationProcessor/java/${sourceSet.name}")
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

test {
    useJUnitPlatform()
}